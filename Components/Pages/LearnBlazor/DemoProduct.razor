@page "/learnblazor/demoproduct"

<h3 class="text-primary">DemoProduct</h3>

<div class="container mt-4">
    <div class="row row-cols-1 row-cols-md-2 g-4 bg-body-secondary">

        @foreach (var prod in Products)
        {
            <div class="col">
                <div class="card h-500 shadow-sm">
                    <div class="card-body">
                        <h4 class="card-title">Product - @prod.Id</h4>
                        <p class="card-text">Name - @prod.Name</p>

                        <p>
                            Show Properties:
                            <input type="checkbox" @bind="@prod.IsActive" />
                        </p>

                        @if (prod.IsActive && prod.ProductProperties != null)
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var prop in prod.ProductProperties)
                                {
                                    <li class="list-group-item">@prop.Key - @prop.Value</li>
                                }
                            </ul>
                        }
                    </div>
                </div>
                <input type="button" class="btn btn-danger" style="width:100px" value="Delete" 
                @onclick="()=>DeleteProduct(prod.Id)"/>
            </div>
            
        }    
    </div>
    <div class="row pt-4">
        <input type="button" class="btn btn-success" style="width:100px" value="Counter" 
        @onclick="()=>IncrementCount(5)"/>
        Counter : @Count
    </div>
</div>


@code {
    public int Count { get; set; } = 0;

    List<Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add
        (
            new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 5.99,
                ShowProperties = false,
                ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                    new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                    new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
                }
            }
        );

        Products.Add
        (
            new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 10.59,
                ShowProperties = false,
                ProductProperties = new List<Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                    new Product_Prop {Id = 3,Key = "Color",Value = "White"}
                }
            }
        );
    }

    private void IncrementCount(int steps)
    {
        Count += steps;

    }

    private void DeleteProduct(int productId)
    {
        var prod = Products.FirstOrDefault(p => p.Id == productId);
        if (prod != null)
        {
            Products.Remove(prod);
        }
    }
}
